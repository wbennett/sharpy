<div class="hero-unit">
    <p>
    <div id="console"></div>
    <script src="js/jqconsole.js"></script>

    <script>
        $(function() {
            // Creating the console.
            var header = 'Welcome to sharpy!\n' +
                    'Start coding!\n';
            window.jqconsole = $('#console').jqconsole(header, 'C#> ');

            // Abort prompt on Ctrl+Z.
            jqconsole.RegisterShortcut('Z', function () {
                jqconsole.AbortPrompt();
                handler();
            });
            // Move to line start Ctrl+A.
            jqconsole.RegisterShortcut('A', function () {
                jqconsole.MoveToStart();
                handler();
            });
            // Move to line end Ctrl+E.
            jqconsole.RegisterShortcut('E', function () {
                jqconsole.MoveToEnd();
                handler();
            });
            jqconsole.RegisterMatching('{', '}', 'brace');
            jqconsole.RegisterMatching('(', ')', 'paran');
            jqconsole.RegisterMatching('[', ']', 'bracket');

            // Handle a command.
            var handler = function (command) {
                if (command) {
                    var rqst = {
                        "Code": {
                            "Value": command
                        }
                    }
                    $.ajax({
                        type: "POST",
                        crossDomain: true,
                        url: "/eval",
                        data: JSON.stringify(rqst),
                        contentType: "application/json",
                        dataType: "json"
                    })
                            .done(function (data) {
                                if (data.ErrorCode) {
                                    jsconsole.Write('CRAP: ' + data.StandardError);
                                } else if (data.StandardOut) {
                                    jsconsole.Write('==> ' + data.StandardOut);
                                } else if (data.ReturnValue) {
                                    jsconsole.Write('==> ' + data.ReturnValue);
                                } else {
                                    jsconsole.Write('==> undefined');
                                }
                                console.log(data);
                            });
                    /*
                     try {
                     jqconsole.Write('==> ' + window.eval(command) + '\n');
                     } catch (e) {
                     jqconsole.Write('ERROR: ' + e.message + '\n');
                     }
                     */
                }
                jqconsole.Prompt(true, handler, function (command) {
                    // Continue line if can't compile the command.
                    try {
                        Function(command);
                    } catch (e) {
                        if (/[\[\{\(]$/.test(command)) {
                            return 1;
                        } else {
                            return 0;
                        }
                    }
                    return false;
                });
            };
            handler();
        });
    </script>
    </p>
</div>
